#!/bin/bash
BOLD=$(tput bold)
NORMAL=$(tput sgr0)
NC='\033[0m'
# Curtesy of https://stackoverflow.com/a/28938235/13449010
# Regular Colors
BLACK='\033[0;30m'        # Black
RED='\033[0;31m'          # Red
GREEN='\033[0;32m'        # Green
YELLOW='\033[0;33m'       # Yellow
BLUE='\033[0;34m'         # Blue
PURPLE='\033[0;35m'       # Purple
CYAN='\033[0;36m'         # Cyan
WHITE='\033[0;37m'        # White

# Bold
BBlack='\033[1;30m'       # Black
BRed='\033[1;31m'         # Red
BGreen='\033[1;32m'       # Green
BYellow='\033[1;33m'      # Yellow
BBlue='\033[1;34m'        # Blue
BPurple='\033[1;35m'      # Purple
BCyan='\033[1;36m'        # Cyan
BWhite='\033[1;37m'       # White

# Underline
UBlack='\033[4;30m'       # Black
URed='\033[4;31m'         # Red
UGreen='\033[4;32m'       # Green
UYellow='\033[4;33m'      # Yellow
UBlue='\033[4;34m'        # Blue
UPurple='\033[4;35m'      # Purple
UCyan='\033[4;36m'        # Cyan
UWhite='\033[4;37m'       # White

# Background
On_Black='\033[40m'       # Black
On_Red='\033[41m'         # Red
On_Green='\033[42m'       # Green
On_Yellow='\033[43m'      # Yellow
On_Blue='\033[44m'        # Blue
On_Purple='\033[45m'      # Purple
On_Cyan='\033[46m'        # Cyan
On_White='\033[47m'       # White

# High Intensity
IBlack='\033[0;90m'       # Black
IRed='\033[0;91m'         # Red
IGreen='\033[0;92m'       # Green
IYellow='\033[0;93m'      # Yellow
IBlue='\033[0;94m'        # Blue
IPurple='\033[0;95m'      # Purple
ICyan='\033[0;96m'        # Cyan
IWhite='\033[0;97m'       # White

# Bold High Intensity
BIBlack='\033[1;90m'      # Black
BIRed='\033[1;91m'        # Red
BIGreen='\033[1;92m'      # Green
BIYellow='\033[1;93m'     # Yellow
BIBlue='\033[1;94m'       # Blue
BIPurple='\033[1;95m'     # Purple
BICyan='\033[1;96m'       # Cyan
BIWhite='\033[1;97m'      # White

# High Intensity backgrounds
On_IBlack='\033[0;100m'   # Black
On_IRed='\033[0;101m'     # Red
On_IGreen='\033[0;102m'   # Green
On_IYellow='\033[0;103m'  # Yellow
On_IBlue='\033[0;104m'    # Blue
On_IPurple='\033[0;105m'  # Purple
On_ICyan='\033[0;106m'    # Cyan
On_IWhite='\033[0;107m'   # White
function initmine() {
    NAME=$2
    DIR=/opt/mine-$NAME
    cd $DIR
    fancy_message info "Making directories"
    mkdir {server,backups}
    cd server
    mine-jar $NAME
    fancy_message info "Accepting EULA"
    echo 'eula=true' > eula.txt
    fancy_message info "Creating startup script"
    touch start.sh
    echo '#!/bin/sh
    cd $(dirname $0)
    java -jar -server -Xms1G -Xmx1G server.jar' > start.sh
    fancy_message info "You should look here for more optimized flags: ${GREEN}https://aikar.co/2018/07/02/tuning-the-jvm-g1gc-garbage-collector-flags-for-minecraft/${NC}"
    fancy_message info "Installing systemd service"
    sudo wget -O $NAME.service -P /etc/systemd/system/ "https://raw.githubusercontent.com/Henryws/mine/master/systemd/$NAME.service"
    fancy_message warn "You will need to edit ${GREEN}/etc/systemd/system/$NAME.service${NC} to add your user in the blank entry"
    fancy_message info "You should put in $(whoami)"
    exit
}
function mine-jar() {
    JARNAME=$2
    wget -q -O server.jar $(curl -s https://github.com/Henryws/mine/raw/master/release.json | jq .${JARNAME}.url)
    fancy_message info "Downloaded $NAME"
}
function fancy_message() {
    if [ -z "${1}" ] || [ -z "${2}" ]; then
      return
    fi
    local RED="\e[31m"
    local GREEN="\e[32m"
    local YELLOW="\e[33m"
    local RESET="\e[0m"
    local MESSAGE_TYPE=""
    local MESSAGE=""
    MESSAGE_TYPE="${1}"
    MESSAGE="${2}"
    case ${MESSAGE_TYPE} in
      info) echo -e "[${BRed}+${NC}] INFO: ${MESSAGE}";;
      warn) echo -e "[${BRed}*${NC}] WARNING: ${MESSAGE}";;
      error) echo -e "[${BRed}!${NC}] ERROR: ${MESSAGE}";;
      *) echo -e "[${BOLD}?${NORMAL}] UNKNOWN: ${MESSAGE}";;
    esac
}
while test $# -gt 0; do
  case "$1" in
    -h|--help)
      echo " "
      echo "options:"
      echo " "
      exit 0
      ;;
    -D|--download)
      export LC_ALL=C
      # Download
      case $2 in
      vanilla)
        fancy_message info "Downlading vanilla jar"
        ....
        ....
        ;;
      forge)
        sudo mkdir /opt/mine-forge/
        sudo chmod -R 775 /opt/mine-forge
        cd /opt/mine-forge
        initmine forge
        java -jar /opt/mine-forge/server.jar --installServer
        exit
        ;;
      fabric)
        sudo mkdir /opt/mine-fabric/
        sudo chmod -R 775 /opt/mine-fabric
        cd /opt/mine-fabric
        initmine fabric
        mv server.jar fabric-installer.jar
        java -jar /opt/mine-fabric/fabric-installer.jar server
        echo '#!/bin/sh
        cd $(dirname $0)
        java -jar -server -Xms1G -Xmx1G fabric-server-launch.jar' > start.sh
        exit
        ;;
      paper)
        sudo mkdir /opt/mine-paper
        sudo chmod -R 775 /opt/mine-paper
        cd /opt/mine-paper
        initmine paper
        ;;
      spigot)
        sudo mkdir /opt/mine-spigot
        sudo chmod -R 775 /opt/mine-spigot
        cd /opt/mine-spigot
        initmine spigot
        mv server.jar buildtools.jar
        java -jar buildtools.jar --rev latest
        mv spigot-*.jar server.jar
        rm -rf {apache-maven-3.6.0,BuildData,Bukkit,CraftBukkit,Spigot,work}
        ;;
     *)
     esac
      ;;
    -B|--backup)
      SERVER=$2
      FILE=$(date +%s)
      [ -d /opt/mine-$SERVER ] || fancy_message error "$SERVER not valid" && exit 1
      DIR=/opt/mine-$SERVER
      fancy_message info "Stopping server"
      systemctl stop $SERVER
      cd $DIR
      zip -q -r server backups/$FILE.zip
      fancy_message info "Wrote to ${GREEN}backups/$FILE.zip${NC}"
      exit
      ;;    
    -RB|--recover-backup)
      SERVER=$2
      BACKUP=$3
      printf "This will overwrite the contents of ${GREEN}/opt/mine-$SERVER/server${NC}. Continue?"
      read -r ans
      if [[ $ans == "n" ]]; then
        exit 1
      else
        cd /opt/mine-$SERVER/server/
        rm -rf /opt/mine-$SERVER/server/
        mv /opt/mine-$SERVER/backups/$BACKUP.zip /opt/mine-$SERVER/server/
        unzip /opt/mine-$SERVER/server/$BACKUP.zip /opt/mine-$SERVER/server/
        fancy_message info "Backed up server to $BACKUP"
        exit
      fi
      ;;
    -R|--remove)
      PACKAGE=$2
      if test -f "/var/lib/porg/$PACKAGE"; then
        sudo rm $(cat /var/lib/porg/$PACKAGE | sed -n 's/|\(.*\)//;/^#\(.*\)/d;p')
        sudo rm -rf /var/log/pacstall_installed/$PACKAGE.pacscript
        sudo rm /var/lib/porg/$PACKAGE
        sudo rm /var/log/pacstall_installed/$PACKAGE*
        fancy_message info "Done removing $PACKAGE"
        exit
      else
        fancy_message error "$PACKAGE does not exist"
        exit 1
      fi
      ;;
    -C|--change-repo)
      if [[ -z "$2" ]]; then
      . /usr/share/pacstall/scripts/change-repo.sh
      else
      echo "$2" | sudo tee /usr/share/pacstall/repo/pacstallrepo.txt >/dev/null 2>&1
      exit
      fi
      ;;
    -V|--version)
      if [[ -z "$2" ]]; then
        COLOR='\e[1;36m'
        NC='\033[0m'
        echo -e "${BOLD}1.0.4 ${COLOR}Celeste${NC}${NORMAL}"
        exit 0
      else
        if [[ $(pacstall -L | grep "$2" | cut -d' ' -f2-) ]]; then
          echo -e "${BOLD}${GREEN}pacstall -L | grep "$2" | cut -d' ' -f2-${NORMAL}${NC}"
          exit
        else
          fancy_message error "$2 doesn't exist"
          exit 1
        fi
      fi
      ;;
    -U|--update)
      for i in {change-repo.sh,search.sh,download.sh,install-local.sh}; do
        sudo wget -q -N https://raw.githubusercontent.com/Henryws/pacstall/master/misc/scripts/$i -P /usr/share/pacstall/scripts 2>/dev/null 
      done
      sudo wget -q -N https://raw.githubusercontent.com/Henryws/pacstall/master/pacstall -P /bin 2>/dev/null
      fancy_message info "You are at version $(pacstall -V)"
      exit 0
      ;;
    -Ud|--update-dev)
      UPDATEBRANCH=1.0.4-Celeste
      fancy_message warn "You may experience severe bugs"
      printf "${RED}Do you want to continue? [y/N]${NC} "
      read -r input
      if [[ $input = y ]]; then
        sudo pacstall -U > /dev/null
        sudo sed -i 's/master/'"$UPDATEBRANCH"'/g' /bin/pacstall
        fancy_message info "Switched to dev branch"
        exit
      else
        exit
      fi
      ;;
    -L|--list)
      echo -e ${BOLD}$(/bin/ls -1 /var/log/pacstall_installed | tr '_' ' ')${NORMAL}
      exit
      ;;
    -D|--download)
      PACKAGE=$2
      if [[ -z "$PACKAGE" ]]; then
        fancy_message error "You failed to specify a package"
        exit 1
      fi
      INSTALLING=0
      REPO=$(cat /usr/share/pacstall/repo/pacstallrepo.txt)
      source /usr/share/pacstall/scripts/download.sh
      exit
      ;;
    -Ra|--remove-all)
      PACKAGE=$*
      for i in $PACKAGE ; do
        if [ -f /var/log/pacstall_installed/$i ] ; then
          LOCATION=installed
        else
          if [ -f /var/log/pacstall_orphaned/$i ] ; then
            LOCATION=orphaned
          fi
        fi
        source /var/log/pacstall_$lOCATION/$i.pacscript
        sudo apt remove $depends
        sudo pacstall -R $i
        rm -rf /var/log/pacstall_$LOCATION/$i.pacscript
      done
      ;;
    -Qd|--query-depends)
      PACKAGE=$2
      REPO=$(cat /usr/share/pacstall/repo/pacstallrepo.txt)
      URL="https://raw.githubusercontent.com/$REPO/master/packages/$PACKAGE/$PACKAGE.pacscript"
      if [[ -z "$PACKAGE" ]]; then
          fancy_message error "You failed to specify a package"
          exit 1
      fi
      if curl --output /dev/null --silent --head --fail "$URL"; then
          source <(curl -s $URL) >/dev/null 2>&1
      else
          fancy_message error "$PACKAGE doesn't seem to exist"
          exit 1
      fi
      echo -e "${GREEN}${BOLD}build_depends${NORMAL}${NC}=\"$build_depends\""
      echo -e "${GREEN}${BOLD}depends${NORMAL}${NC}=\"$depends\""
      exit
      ;;
     *)
      mine -h
      exit 1
      ;;
  esac
done
